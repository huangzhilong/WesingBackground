问题1: shape存在多个drawable中该怎么代码记录

	这种情况比较少，判断存在的就不处理了，继续使用原来的drawable xml方式


问题2: 不同module存在相同名字的drawable xml的怎么处理，该使用哪个

	不同module存在相同的名字的drawable.xml本来就是问题，可使用开源项目 CheckResourceConflict来扫描！！，假设这两个模块的功能都使用同名的xml，
	在编译时会进行覆盖只会保留一份（保留主工程的）。会造成UI不一致，甚至crash（比如findById查找失败）


问题3: xml的值使用定义在value的Id怎么处理

    https://blog.csdn.net/wjj1996825/article/details/103406881

	这里要生成Java（不能生成json，不参与编译），需要参与编译。让Id在编译期变成准确的int值。生成code时候标记是准确数值还是Id，Id的话把Id记录下来。在生成drawable的时候再通过Id代码获取对应的值
	（所以扫描时要再自己的module里生成对应的java文件，编译的时候会自动替换成对应的ID值）

    获取ID：

    android ID：
    context.getResources().getDimension(android.R.dimen.app_icon_size)

    App ID：
    context.getResources().getDimension(R.dimen.app_icon_size)


问题4： A模块依赖B模块的xml shape，若每个模块自己扫描处理xml的话，A模块里面就找不到所需要B模块的shape xml的Id。

    所以需要一次任务就全部一次扫描，把项目中所有的xml shape文件全部扫描出来生成代码熟悉和Id（id是递增的，用于替换layout xml里的background属性，改成自定义属性用id标记）

    shape xml需要一次性扫描出来，生成全局Id，根据xml的名字


问题5： 删除了shape  xml文件后， xml布局中使用shape和代码中getDrawable中使用shape会编译不过。（要想想怎么减包）



问题6： 不能换成别的xml文件，放在项目的layout目录不同名字代码中使用了找不到Id，不放在这个目录则编译不过，提示错误路径





先单线程处理，后期再加入多线程！！！！


$project.android.compileSdkVersion 可获取project android下的属性


CompileSourceSetResources : IncrementalTask()

mergeResources 调用栈


MergedResourceWriter.addItem


at com.tencent.wesing.background.plugin.layout.MyWorkerExecutor.submit(MyWorkerExecutor.groovy:33)
	at com.android.build.gradle.internal.tasks.Workers$WorkerExecutorAdapter.submit(Workers.kt:173)
	at com.android.build.gradle.internal.tasks.Workers$WorkerExecutorAdapter.submit(Workers.kt:146)
	at com.android.ide.common.resources.MergedResourceWriter.addItem(MergedResourceWriter.java:377)
	at com.android.ide.common.resources.MergedResourceWriter.addItem(MergedResourceWriter.java:70)
	at com.android.ide.common.resources.DataMerger.mergeData(DataMerger.java:280)
	at com.android.ide.common.resources.ResourceMerger.mergeData(ResourceMerger.java:385)
	at com.android.build.gradle.tasks.MergeResources.lambda$doFullTaskAction$1(MergeResources.java:319)
	at com.android.build.gradle.internal.tasks.Blocks.recordSpan(Blocks.java:58)
	at com.android.build.gradle.tasks.MergeResources.doFullTaskAction(MergeResources.java:315)


